openapi: 3.0.2
info:
  title: JM_bank
  version: 1.0.0
servers:
  -
    url: 'http://localhost:1234'
    description: ''
  -
    url: 'https://jaanamairitbank.online'
    description: ''
paths:
  /users:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postUsersRequest'
        required: true
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userObject'
          description: User successfully registered.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userObject'
          description: User successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Invalid password:
                  value:
                    error: Invalid password
                Parameter is required:
                  value:
                    error: 'User validation failed: {param}: Path `{param}` is required.'
          description: Bad request
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Username already exists:
                  value:
                    error: Username already exists
          description: Username already exists.
      summary: Registers a new user
  /sessions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postSessionsRequest'
        required: true
      tags:
        - sessions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postSessionResponse'
          description: User logged in successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Invalid username/password:
                  value:
                    error: Invalid username/password
                Invalid token:
                  value:
                    error: Invalid token
          description: Invalid username/password
      summary: Logs the user in
    delete:
      tags:
        - sessions
      responses:
        '204':
          description: User logged out successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Missing Authorization header:
                  value:
                    error: Missing Authorization header
                Invalid token:
                  value:
                    error: Invalid token
          description: Unauthorized
      security:
        -
          Token: []
      summary: Logs the user out
  /users/current:
    get:
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUsersCurrentResponse'
          description: Successful request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Missing Authorization header:
                  value:
                    error: Missing Authorization header
                Invalid token:
                  value:
                    error: Invalid token
          description: Unauthorized
      security:
        -
          Token: []
      summary: Returns currently logged in user's data
  /transactions:
    get:
      tags:
        - transactions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTransactionResponse'
          description: Transactions list received successfully.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Invalid token:
                  value:
                    error: Invalid token
          description: Invalid token
      security:
        -
          Token: []
      summary: Get transactions.
      description: Get list of transactions.
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTransactionsRequest'
        required: true
      tags:
        - transactions
      responses:
        '201':
          content:
            application/json: {}
          description: Transaction has been successfully queued for processing
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                invalidAmount:
                  value:
                    error: Invalid amount
                invalidAccountTo:
                  value:
                    error: Invalid accountTo
          description: Invalid amount
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                insufficientFunds:
                  value:
                    error: Insufficient funds
          description: Insufficient funds
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                forbidden:
                  value:
                    error: Forbidden
          description: The accountFrom does not belong to the user
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                accountNotFound:
                  value:
                    error: Account not found
          description: Account not found
      security:
        -
          Token: []
  /transaction/b2b:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTransactionsB2bRequest'
        required: true
      tags:
        - transactions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postTransactionsB2bResponse'
              examples:
                Receiver name:
                  value:
                    receiverName: Jaana Å effer
          description: Transfer accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Parsing JWT payload failed:
                  value:
                    error: Parsing JWT payload failed
                The bank not found in Central Bank:
                  value:
                    error: >-
                      The account sending the funds does not belong to a bank registered
                      in Central Bank
                Cannot verify your signature:
                  value:
                    error: 'Cannot verify your signature: The jwkUrl of your bank is invalid'
                Invalid signature:
                  value:
                    error: Invalid signature
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Account not found:
                  value:
                    error: Account not found
          description: Account not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Cannot verify your signature:
                  value:
                    error: 'Cannot verify your signature: The jwksUrl of your bank is missing'
          description: Cannot verify your signature
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                Central Bank error:
                  value:
                    error: Central Bank error
          description: Central Bank error
      summary: Accepts new transaction from anoher bank
components:
  schemas:
    userObject:
      title: user object
      description: ''
      type: object
      properties:
        id:
          description: User's ID
          type: string
        name:
          description: Users full name
          type: string
        username:
          description: User's username
          type: string
        accounts:
          description: Array of user's bank accounts
          type: array
          items:
            $ref: '#/components/schemas/account'
        password:
          description: ''
      example:
        id: 5f912320dcb3ab606a54a1d1
        name: Mairit
        username: mairit
        accounts:
          -
            name: Main
            balance: '100000'
            currency: EUR
            number: 907aea8e0784cbdbc0b4da59293eaaf8906
    errorResponse:
      title: error object
      description: ''
      type: object
      properties:
        error:
          type: string
      example:
        error: Error message.
    postSessionsRequest:
      title: POST /sessions request
      description: ''
      type: object
      properties:
        password:
          description: The password associated with given username
          type: string
        username:
          description: 'A valid username '
          type: string
      example:
        password: plutoonium
        username: mairit
    postSessionResponse:
      title: POST /session response
      description: ''
      type: object
      properties:
        token:
          description: >-
            A session tokens wich needs to be sent back to server in Authorization header with
            every request (Authorization: Bearer <token>)
          type: string
      example:
        token: 5f91235ddcb3ab606a54a1d3
    getUsersCurrentResponse:
      title: GET /Users current response
      description: ''
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        username:
          type: string
        accounts:
          description: Array of user's accounts
          type: array
          items:
            $ref: '#/components/schemas/account'
      example:
        id: 5f912320dcb3ab606a54a1d1
        name: Mairit
        username: mairit
        accounts:
          -
            name: Main
            balance: '100000'
            currency: EUR
            number: 907aea8e0784cbdbc0b4da59293eaaf8906
    account:
      title: account object
      description: ''
      required: []
      type: object
      properties:
        name:
          type: string
        balance:
          type: integer
        currency:
          type: string
        number:
          type: string
      example:
        name: Main
        balance: '100000'
        currency: EUR
        number: 907aea8e0784cbdbc0b4da59293eaaf8906
    postTransactionsRequest:
      title: POST /transactions request
      description: ''
      type: object
      properties:
        accountFrom:
          description: Sender's bank account
          type: string
        accountTo:
          description: Receiver's bank account
          type: string
        amount:
          format: int32
          description: The sum
          type: integer
        explanation:
          description: Purpose of the transaction
          type: string
      example:
        accountFrom: 907aea8e0784cbdbc0b4da59293eaaf8906
        accountTo: 8b977313a54d6ddd72dec8209ea2452167b
        amount: 10
        explanation: Spend it wisely
    postUsersRequest:
      title: POST /users request
      description: ''
      required:
        - name
        - username
        - password
      type: object
      properties:
        name:
          description: User's full name
          type: string
        username:
          description: Desired username
          type: string
        password:
          format: password
          description: Desired password
          type: string
      example:
        name: Mairit
        username: mairit
        password: plutoonium
    postTransactionsB2bRequest:
      description: ''
      type: object
      properties:
        jwt:
          description: >-
            A JSON Web Token, containing the following payload:

            {
                "accountFrom": "xxx123456",
                "accountTo": "yyy123456",
                "currency": "GBP",
                "amount": 101,
                "explanation": "Raha nagu muda",
                "senderName": "Jaana"
            }, signed by the sending bank with its private key of which the public counterpart is
            available at the bank's jwksUrl
          type: string
      example:
        jwt: >-
          eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50RnJvbSI6IjkwN2E0YjFmYTQzOTk5NDM1MTE1ZDc0OWMwZDRiYTNjOGRiIiwiYWNjb3VudFRvIjoiOGI5NzczMTNhNTRkNmRkZDcyZGVjODIwOWVhMjQ1MjE2N2IiLCJjdXJyZW5jeSI6IkVVUiIsImFtb3VudCI6MTExLCJleHBsYW5hdGlvbiI6InRlc3QiLCJzZW5kZXJOYW1lIjoiSmFhbmEifQ.QTVvvD6vd5yWAxvPQKwi_zZnvIYtUtrivVxhvL56cfavgMbLYTGhRmK_N7BQA4tBPq_5pe0uAJqn_AUIfvQf6Rprd3mpS8oyupNaD2tye45h8r2jf6JhibRgd9Z3iJBrWzJ51WjpJi9j8_t9RPCuMZujuO0OFubRjMiIvavEhefDjIw_2DKSNAlavijNoFHloaIglQ9De9YBVYq2ECtogSIVcBXgAW8E9CnRBkQCshJ17z405WaCqltlrqcyZM_aS-VC3FHD6GWFtdbuHiGIDOg1b1XkoNVQUUeNRyQ8zMffTHSNornkxkuVrnN13TTKsubWHd4_LuEUOVesFPsCYA
    postTransactionsB2bResponse:
      description: ''
      required:
        - receiverName
      type: object
      properties:
        receiverName:
          description: The name of the person to whom the accountTo account belongs to
          type: string
      example:
        receiverName: Jaana Å effer
    transactionObject:
      title: transactionObject
      description: ''
      type: object
      properties:
        id:
          description: Transaction ID
          type: string
        status:
          description: '''pending'', ''inProgress'' or ''failed'''
          type: string
        amount:
          description: Transfer sum
          type: string
        currency:
          description: currency of amount
          type: string
        accountFrom:
          description: Sender's account
          type: string
        accountTo:
          description: Receiver's account
          type: string
        explanation:
          description: Purpose of transaction
          type: string
        senderName:
          type: string
        createdAt:
          format: date-time
          description: Time when transaction was made
          type: string
        statusDetail:
          type: string
      example:
        id: 5fa0f9bb1435848b0569d0ca
        status: completed
        amount: '101'
        currency: EUR
        accountFrom: 907642907a1266afdc8ea4ee2d7c7a6cab6
        accountTo: 8b977313a54d6ddd72dec8209ea2452167b
        explanation: Raha nagu muda
        senderName: Jaana
        createdAt: '2020-11-01T21:32:45.697+00:00'
        statusDetail: ''
    getTransactionResponse:
      description: ''
      type: object
  securitySchemes:
    Token:
      scheme: bearer
      type: http
      description: A Bearer scheme
